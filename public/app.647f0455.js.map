{"version":3,"sources":["src/app.js"],"names":["windows","document","querySelectorAll","fourlineBoard","querySelector","childrenBoard","children","tab","lightbox","createElement","id","body","appendChild","rowsBoard","columnsBoard","valueBoard","Array","fill","opponent","you","player","checkColumn","e","position","column","parseInt","target","substring","forEach","window","classList","remove","i","item","add","addChip","element","contains","parentElement","insertIndex","charAt","firstElementChild","isFinished","color","style","backgroundColor","tabBoard","counter","x","y","isWin","generateTable","toVerify","direction","pos","moveAmount","pattern","repeat","comparison","join","includes","startIndex","circleWonPosition","indexOf","startPosition","length","setTimeout","informationLightbox","inc1","inc2","inc3","inc4","tab1","generateSubTable","tab2","reverse","incrementRow","incrementColumn","currentColumn","currentRow","temp1","temp2","push","startAgain","message","display","div","innerHTML","firstChild","removeChild","addEventListener"],"mappings":"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","file":"app.647f0455.js","sourceRoot":"..","sourcesContent":["const windows = document.querySelectorAll('.window')\r\nconst fourlineBoard = document.querySelector('.fourline')\r\nconst childrenBoard = fourlineBoard.children\r\nconst tab = document.querySelector(\".nav__li\")\r\nconst lightbox = document.createElement('div')\r\n\r\nlightbox.id = 'lightbox'\r\ndocument.body.appendChild(lightbox)\r\n\r\nconst rowsBoard = 6\r\nconst columnsBoard = 7\r\nconst valueBoard = new Array(rowsBoard * columnsBoard).fill(\"e\")\r\nconst opponent = \"opponent\"\r\nconst you = \"you\"\r\nlet player = you\r\n\r\nwindows.forEach(window => {\r\n    window.addEventListener('mouseenter', e => {\r\n        checkColumn(e)\r\n    })\r\n    window.addEventListener('click', e => {\r\n        if (!valueBoard.includes(\"e\")) {\r\n            informationLightbox(\"DRAW\")\r\n        }    \r\n        addChip(e)\r\n    })\r\n})\r\n\r\ntab.addEventListener('click', () => {\r\n    startAgain()\r\n})\r\n\r\nlightbox.addEventListener('click', e => {\r\n    startAgain()\r\n    lightbox.classList.remove('lightbox--active')\r\n    lightbox.style.display = \"none\"\r\n})\r\n\r\nfourlineBoard.addEventListener('mouseleave', () => windows.forEach(window => window.classList.remove(\"column\")))\r\n\r\nfunction checkColumn(e) {\r\n    const position = parseInt(e.target.id.substring(6))\r\n    const column = position % columnsBoard\r\n    windows.forEach(window => window.classList.remove(\"column\"))\r\n    for (let i = column; i < rowsBoard * columnsBoard; i += columnsBoard) {\r\n        childrenBoard.item(i).classList.add(\"column\")\r\n    }\r\n}\r\n\r\nfunction addChip(e) {\r\n    element = e.target\r\n    if (element.classList.contains(\"circle\")) {\r\n        element = element.parentElement\r\n    }\r\n    const position = parseInt(element.id.substring(6))\r\n    const column = position % columnsBoard\r\n    let insertIndex = column + columnsBoard * (rowsBoard - 1)\r\n    while (true) {\r\n        if (valueBoard[insertIndex] === \"e\") {\r\n            valueBoard[insertIndex] = player.charAt(0)\r\n            childrenBoard.item(insertIndex).firstElementChild.classList.add(`circle--selected${player}`)\r\n            isFinished(insertIndex)\r\n            break\r\n        }\r\n        insertIndex -= columnsBoard\r\n        if (insertIndex < 0) return\r\n    }\r\n    const color = player === you ? \"#1b0648\" : \"#ff3399\"\r\n    tab.style.backgroundColor = color\r\n    player = player === you ? opponent : you\r\n\r\n}\r\n\r\nfunction isFinished(position) {\r\n    let tabBoard = new Array();\r\n    let counter = 0;\r\n    for (let x = 0; x < rowsBoard; x++) {\r\n        tabBoard[x] = [];\r\n        for (let y = 0; y < columnsBoard; y++) {\r\n            tabBoard[x][y] = valueBoard[counter++]\r\n        }\r\n    }\r\n    const bias1 = generateTable(position, tabBoard, -1, -1, 1, 1)\r\n    isWin(bias1, 0, position)\r\n    const vertically = generateTable(position, tabBoard, -1, 0, 1, 0)\r\n    isWin(vertically, 1, position)\r\n    const bias2 = generateTable(position, tabBoard, 1, -1, -1, 1)\r\n    isWin(bias2, 2, position)\r\n    const horizontally = generateTable(position, tabBoard, 0, -1, 0, 1)\r\n    isWin(horizontally, 3, position)\r\n}\r\n\r\nfunction isWin(toVerify, direction, position) {\r\n    const { tab, pos } = toVerify\r\n    const tabDirection = [8, 7, -6, 1]\r\n    const moveAmount = tabDirection[direction]\r\n    const pattern = player.charAt(0).repeat(4)\r\n    const comparison = tab.join(\"\")\r\n    if (comparison.includes(pattern)) {\r\n        const startIndex = comparison.indexOf(pattern)\r\n        const startPosition = position - (pos - startIndex) * moveAmount\r\n        let circleWonPosition\r\n        for (let i = startIndex; i < comparison.length; i++) {\r\n            if (comparison[i] !== player.charAt(0)) {\r\n                break\r\n            }\r\n            circleWonPosition = (i - startIndex) * moveAmount + startPosition\r\n            childrenBoard.item(circleWonPosition).firstElementChild.classList.add(`circle--won`)\r\n        }\r\n        setTimeout( () => informationLightbox(\"YOU WON\"), 500)\r\n    }\r\n}\r\n\r\nfunction generateTable(position, tabBoard, inc1, inc2, inc3, inc4) {\r\n    const tab1 = generateSubTable(position, tabBoard, inc1, inc2)\r\n    const tab2 = generateSubTable(position, tabBoard, inc3, inc4)\r\n    tab1.reverse()\r\n    const tab = [...tab1, valueBoard[position], ...tab2]\r\n    return { tab, pos: tab1.length }\r\n}\r\n\r\nfunction generateSubTable(position, tabBoard, incrementRow, incrementColumn) {\r\n    const tab = []\r\n    let currentColumn = position % columnsBoard\r\n    let currentRow = (position - currentColumn) / columnsBoard\r\n    let temp1 = incrementRow\r\n    let temp2 = incrementColumn\r\n    for (let i = 1; i < 4; i++) {\r\n        if (currentRow + incrementRow < rowsBoard && currentColumn + incrementColumn < columnsBoard\r\n            && currentRow + incrementRow >= 0 && currentColumn + incrementColumn >= 0) {\r\n            tab.push(tabBoard[currentRow + incrementRow][currentColumn + incrementColumn])\r\n        }\r\n        incrementRow += temp1\r\n        incrementColumn += temp2\r\n    }\r\n    return tab\r\n}\r\n\r\nfunction startAgain() {\r\n    player = you\r\n    tab.style.backgroundColor = \"#ff3399\"\r\n    for (let i = 0; i < valueBoard.length; i++) {\r\n        valueBoard[i] = \"e\"\r\n        childrenBoard.item(i).firstElementChild.classList = \"circle\"\r\n    }\r\n}\r\n\r\nfunction informationLightbox(message) {\r\n    lightbox.classList.add('lightbox--active')\r\n    lightbox.style.display = \"block\"\r\n    lightbox.style.display = \"flex\"\r\n    const div = document.createElement('div')\r\n    div.classList.add('div--won')\r\n    div.innerHTML = message\r\n    const color = player === you ? \"#1b0648\" : \"#ff3399\"\r\n    div.style.color = color\r\n    while(lightbox.firstChild){\r\n        lightbox.removeChild(lightbox.firstChild)\r\n    }\r\n    lightbox.appendChild(div)\r\n}"]}